# This is the CMakeCache file.
# For build in directory: e:/git/x265-Yuuki-Asuna/build/vc22-x86_64
# It was generated by CMake: C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

AVIS_FOLDER:STRING=C:/Program Files (x86)/AviSynth+

//Install location of executables
BIN_INSTALL_DIR:STRING=bin

//Enable run-time sanity checks (debugging)
CHECKED_BUILD:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/lib.exe

//Flags used by the ASM_NASM compiler during all build types.
CMAKE_ASM_NASM_FLAGS:STRING=

//Flags used by the ASM_NASM compiler during DEBUG builds.
CMAKE_ASM_NASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM_NASM compiler during MINSIZEREL builds.
CMAKE_ASM_NASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM_NASM compiler during RELEASE builds.
CMAKE_ASM_NASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM_NASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO:STRING=

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=Release

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/x265

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x86/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=x265

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x86/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable internal profiling of encoder work
DETAILED_CU_STATS:BOOL=OFF

//Enable use of assembly coded primitives
ENABLE_ASSEMBLY:BOOL=ON

//Enable AviSynth input
ENABLE_AVISYNTH:BOOL=ON

//Build standalone CLI application
ENABLE_CLI:BOOL=ON

//Enable dynamic HDR10 compilation
ENABLE_HDR10_PLUS:BOOL=ON

//Enable LAVF decoder
ENABLE_LAVF:BOOL=OFF

//Enable L-SMASH muxer
ENABLE_LSMASH:BOOL=ON

//Enable Haali Matroska muxer
ENABLE_MKV:BOOL=OFF

//Enable Position Independent Code
ENABLE_PIC:BOOL=ON

//Enable PPA profiling instrumentation
ENABLE_PPA:BOOL=ON

//Build shared library
ENABLE_SHARED:BOOL=ON

//Link to LAVF's private libs
ENABLE_STATIC_LAVF:BOOL=ON

//Enable SVT HEVC Encoder
ENABLE_SVT_HEVC:BOOL=ON

//Enable Unit Tests
ENABLE_TESTS:BOOL=OFF

//Build UTF-8 binary
ENABLE_UTF8:BOOL=ON

//Enable VapourSynth input
ENABLE_VPYSYNTH:BOOL=ON

//Enable Vtune profiling instrumentation
ENABLE_VTUNE:BOOL=ON

//Enable ZImg scaling libary
ENABLE_ZIMG:BOOL=OFF

//Implement public C programming interface
EXPORT_C_API:BOOL=ON

//Extra libraries to link against
EXTRA_LIB:STRING=

//Extra link flags
EXTRA_LINK_FLAGS:STRING=

//Compile executable to generate usage data
FPROFILE_GENERATE:BOOL=OFF

//Compile executable using generated usage data
FPROFILE_USE:BOOL=OFF

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//hg command line client
HG_EXECUTABLE:FILEPATH=HG_EXECUTABLE-NOTFOUND

//Store pixel samples as 16bit values (Main10/Main12)
HIGH_BIT_DEPTH:BOOL=ON

//Path to a file.
LIBAVCODEC_INCLUDE_DIR:PATH=LIBAVCODEC_INCLUDE_DIR-NOTFOUND

//Path to a file.
LIBAVFORMAT_INCLUDE_DIR:PATH=LIBAVFORMAT_INCLUDE_DIR-NOTFOUND

//Path to a file.
LIBAVUTIL_INCLUDE_DIR:PATH=LIBAVUTIL_INCLUDE_DIR-NOTFOUND

//Path to a file.
LIBSWRESAMPLE_INCLUDE_DIR:PATH=LIBSWRESAMPLE_INCLUDE_DIR-NOTFOUND

//Install location of libraries
LIB_INSTALL_DIR:STRING=lib

//Path to a library.
LSMASH:FILEPATH=E:/git/l-smash/x64/Release

//The lib directory of L-SMASH
LSMASH_LIB_DIR:STRING=E:/git/l-smash/x64/Release

// The source directory of L-SMASH
LSMASH_SOURCE_DIR:PATH=E:/git/l-smash

//Support Main12 instead of Main10
MAIN12:BOOL=OFF

//Path to a program.
NASM_EXECUTABLE:FILEPATH=C:/Program Files/NASM/nasm.exe

//Target the build CPU
NATIVE_BUILD:BOOL=OFF

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=C:/Strawberry/perl/bin/pkg-config.bat

//Specify the source directory of L-SMASH. You may clone a repo
// from https://github.com/l-smash/l-smash
SPECIFY_LSMASH_SOURCE_DIR:BOOL=ON

//Statically link C runtime for release builds
STATIC_LINK_CRT:BOOL=ON

//Path to a file.
SVT_HEVC_INCLUDE_DIR:PATH=SVT_HEVC_INCLUDE_DIR-NOTFOUND

//Path to a library.
SVT_HEVC_LIBRARY:FILEPATH=SVT_HEVC_LIBRARY-NOTFOUND

//VLD include directory
VLD_INCLUDE_DIR:PATH=VLD_INCLUDE_DIR-NOTFOUND

//VLD debug library
VLD_LIBRARY_DEBUG:FILEPATH=VLD_LIBRARY_DEBUG-NOTFOUND

//VLD root directory
VLD_ROOT_DIR:PATH=VLD_ROOT_DIR-NOTFOUND

VS_FOLDER:STRING=C:/Program Files/VapourSynth

//Vtune root directory
VTUNE_DIR:PATH=VTUNE_DIR-NOTFOUND

//Stop compiles on first warning
WARNINGS_AS_ERRORS:BOOL=OFF

//Make binaries compatible with Windows XP and Vista
WINXP_SUPPORT:BOOL=OFF

//Value Computed by CMake
dynamicHDR10_BINARY_DIR:STATIC=E:/git/x265-Yuuki-Asuna/build/vc22-x86_64/dynamicHDR10

//Value Computed by CMake
dynamicHDR10_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
dynamicHDR10_SOURCE_DIR:STATIC=E:/git/x265-Yuuki-Asuna/source/dynamicHDR10

//Dependencies for the target
x265-shared_LIB_DEPENDS:STATIC=general;PPA;

//Value Computed by CMake
x265_BINARY_DIR:STATIC=E:/git/x265-Yuuki-Asuna/build/vc22-x86_64

//Value Computed by CMake
x265_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
x265_SOURCE_DIR:STATIC=E:/git/x265-Yuuki-Asuna/source


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
CMAKE_ASM_NASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS
CMAKE_ASM_NASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_DEBUG
CMAKE_ASM_NASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_MINSIZEREL
CMAKE_ASM_NASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_RELEASE
CMAKE_ASM_NASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_NASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=e:/git/x265-Yuuki-Asuna/build/vc22-x86_64
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=22
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=22040401
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Enterprise
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=E:/git/x265-Yuuki-Asuna/source
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=5
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.22
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXPORT_C_API
EXPORT_C_API-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXTRA_LIB
EXTRA_LIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EXTRA_LINK_FLAGS
EXTRA_LINK_FLAGS-ADVANCED:INTERNAL=1
//Details about finding AVISYNTH
FIND_PACKAGE_MESSAGE_DETAILS_AVISYNTH:INTERNAL=[C:/Program Files (x86)/AviSynth+/FilterSDK/include][ON][v()]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git/cmd/git.exe][v2.36.1.windows.1()]
//Details about finding PkgConfig
FIND_PACKAGE_MESSAGE_DETAILS_PkgConfig:INTERNAL=[C:/Strawberry/perl/bin/pkg-config.bat][v0.26()]
//Details about finding VAPOURSYNTH
FIND_PACKAGE_MESSAGE_DETAILS_VAPOURSYNTH:INTERNAL=[C:/Program Files/VapourSynth/sdk/include][ON][v()]
//Details about finding Vapoursynth
FIND_PACKAGE_MESSAGE_DETAILS_Vapoursynth:INTERNAL=[C:/Program Files/VapourSynth/sdk/include][ON][v()]
//Details about finding nasm
FIND_PACKAGE_MESSAGE_DETAILS_nasm:INTERNAL=[C:/Program Files/NASM/nasm.exe][v2.15.05()]
//ADVANCED property for variable: FPROFILE_GENERATE
FPROFILE_GENERATE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FPROFILE_USE
FPROFILE_USE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have includes getopt.h
HAVE_GETOPT_H:INTERNAL=
//Have include inttypes.h
HAVE_INT_TYPES_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strtok_r
HAVE_STRTOK_R:INTERNAL=
//ADVANCED property for variable: HG_EXECUTABLE
HG_EXECUTABLE-ADVANCED:INTERNAL=1
//nasm sources
MSVC_ASMS:INTERNAL=ipfilter16.asm;h4-ipfilter16.asm;pixel-a.asm;const-a.asm;cpu-a.asm;ssd-a.asm;mc-a.asm;mc-a2.asm;pixel-util8.asm;blockcopy8.asm;pixeladd8.asm;dct8.asm;seaintegral.asm;sad16-a.asm;intrapred16.asm;v4-ipfilter16.asm;h-ipfilter16.asm;loopfilter.asm
//ADVANCED property for variable: NATIVE_BUILD
NATIVE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SVT_HEVC_INCLUDE_DIR
SVT_HEVC_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SVT_HEVC_LIBRARY
SVT_HEVC_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VLD_INCLUDE_DIR
VLD_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VLD_LIBRARY_DEBUG
VLD_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VTUNE_DIR
VTUNE_DIR-ADVANCED:INTERNAL=1
//Test _cpp_latest_flag_supported
_cpp_latest_flag_supported:INTERNAL=

